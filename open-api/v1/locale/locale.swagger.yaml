swagger: '2.0'
info:
  description: >-

    <img height="100" width="100"
    src="/archetypes/v1/img/logo-commonalaxy.png.png" alt="OpenAPI 2.0
    Business Archetypes">

    ## `Locale`

    The `Locale` archetype represents a general notion of place, location, or
    context.


    `Locales` can represent contexts that don't correspond to real places or
    locations. For example, you could extend `Locale` with a
    `LoyaltyProgramCode` that represents an airline's or supermarket's loyalty
    card program.

    ## `IsoCountryCode`

    `IsoCountryCode` extends `Locale` to provide a country defined in [ISO
    3166](https://www.iso.org/iso-3166-country-codes.html).


    ## Standards compliance

    <table>
      <thead>
        <tr><th>Standard</th><th>Contents</th></tr>
      </thead>
      <tfoot>
      </tfoot>
      <tbody>
        <tr>
          <td><a href="https://www.iso.org/iso-3166-country-codes.html">ISO 3166</a></td>
          <td>International Standard for country codes and codes for their subdivisions.</td>
        </tr>
        <tr>
          <td><a href="http://cldr.unicode.org/">Unicode CLDR</a></td>
          <td>Unicode Common Locale Data Repository provides localization support for the world's languages.</td>
        </tr>
      </tbody>
    </table>



    ---



    ## Business archetypes defined

    "A business archetype is a primordial thing that occurs consistently and
    universally in business domains and business software systems." (Arlow &
    Neustadt, [_Enterprise patterns and MDA: building better software with
    archetype patterns and
    UML_](https://www.amazon.com/Enterprise-Patterns-MDA-Building-Archetype/dp/032111230X),
    2006, p. 5)


    ## Explore other business archetype patterns

    [Open a Swagger-UI](http://api.swindle.net/swagger-ui/#/) instance, then
    copy and paste the following Swagger specification URLs into the "Explore"
    text field and select the "Explore" button for additional APIs.

    1. `Locale`:
    http://api.swindle.net/archetypes/v1/schemas/locale/locale.swagger.json

    2. `Party`:
    http://api.swindle.net/archetypes/v1/schemas/party/party.swagger.json

    3. `Quantity`:
    http://api.swindle.net/archetypes/v1/schemas/quantity/quantity.swagger.json


    ---

    ## About
  version: 1.0.0
  title: Locale
  contact:
    name: Greg Swindle
    url: 'https://github.com/gregswindle'
  license:
    name: Apache License 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
host: api.swindle.net
basePath: /archetypes/v1/locales
tags:
  - name: Locales
    description: 'A list of archetypes that represent identifiable, addressable entities.'
  - name: ISO Country Codes
    description: A list of all countries defined in ISO 3166.
schemes:
  - http
  - https
externalDocs:
  description: >-
    Enterprise patterns and MDA: building better software with archetype
    patterns and UML
  url: >-
    https://www.amazon.com/Enterprise-Patterns-MDA-Building-Archetype/dp/032111230X
paths:
  /:
    get:
      tags:
        - Locales
      summary: Retrieve all Locales.
      description: >-
        The Locale archetype represents a general notion of place, location, or
        context.
      produces:
        - application/json
        - application/xml
      operationId: getLocales
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Locale'
        '400':
          description: Bad Request.
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Unauthorized.
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Not Found.
          schema:
            $ref: '#/definitions/NotFoundError'
        '405':
          description: 'Method Not Allowed. '
          schema:
            $ref: '#/definitions/MethodNotAllowedError'
  '/{identifier}':
    get:
      tags:
        - Locales
      summary: Retrieve a specific Locale entity.
      description: Retrieve a Locale by its identifier.
      produces:
        - application/json
        - application/xml
      operationId: getLocaleById
      parameters:
        - in: path
          name: identifier
          description: The lower case ISO 3166 alphabetic two-character of the Locale.
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Locale'
        '400':
          description: Bad Request.
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Unauthorized.
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Not Found.
          schema:
            $ref: '#/definitions/NotFoundError'
        '405':
          description: 'Method Not Allowed. '
          schema:
            $ref: '#/definitions/MethodNotAllowedError'
  /iso-country-codes/:
    get:
      tags:
        - ISO Country Codes
      summary: Retrieve all countries defined in ISO 3166.
      description: Retrieve all countries defined in ISO 3166.
      produces:
        - application/json
        - application/xml
      operationId: getIsoCountryCodes
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/IsoCountryCode'
        '400':
          description: Bad Request.
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Unauthorized.
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Not Found.
          schema:
            $ref: '#/definitions/NotFoundError'
        '405':
          description: 'Method Not Allowed. '
          schema:
            $ref: '#/definitions/MethodNotAllowedError'
  '/iso-country-codes/{identifier}':
    get:
      tags:
        - ISO Country Codes
      summary: Retrieve a specific IsoCountryCode entity.
      description: >-
        Retrieve a IsoCountryCode by its (upper case) ISO 3166 alphabetic
        two-character value.
      produces:
        - application/json
        - application/xml
      operationId: getIsoCountryCodeById
      parameters:
        - in: path
          name: identifier
          description: >-
            The (upper case) ISO 3166 alphabetic two-character value, e.g., "US"
            for the Unitied States of America, or "IN" for India.
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/IsoCountryCode'
        '400':
          description: Bad Request.
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Unauthorized.
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Not Found.
          schema:
            $ref: '#/definitions/NotFoundError'
        '405':
          description: 'Method Not Allowed. '
          schema:
            $ref: '#/definitions/MethodNotAllowedError'
definitions:
  Locale:
    $ref: 'http://api.swindle.net/archetypes/v1/schemas/locale/locale.schema.json'
  IsoCountryCode:
    allOf:
      - $ref: 'http://api.swindle.net/archetypes/v1/schemas/locale/locale.schema.json'
      - $ref: >-
          http://api.swindle.net/archetypes/v1/schemas/locale/iso-country-code.schema.json
      - description: >-
          IsoCountryCode extends Locale to provide a country defined in ISO
          3166.
      - title: IsoCountryCode
  BadRequestError:
    allOf:
      - $ref: >-
          http://api.swindle.net/archetypes/v1/schemas/logging-event/error-response/400.schema.json
      - description: >-
          400 Bad Request. The request could not be understood by the server due
          to malformed syntax. The client SHOULD NOT repeat the request without
          modifications.
  UnauthorizedError:
    allOf:
      - $ref: >-
          http://api.swindle.net/archetypes/v1/schemas/logging-event/error-response/401.schema.json
      - description: >-
          401 Unauthorized. The request requires user authentication. The
          response MUST include a WWW-Authenticate header field (section 14.47)
          containing a challenge applicable to the requested resource. The
          client MAY repeat the request with a suitable Authorization header
          field (section 14.8). If the request already included Authorization
          credentials, then the 401 response indicates that authorization has
          been refused for those credentials. If the 401 response contains the
          same challenge as the prior response, and the user agent has already
          attempted authentication at least once, then the user SHOULD be
          presented the entity that was given in the response, since that entity
          might include relevant diagnostic information.
  ForbiddenError:
    allOf:
      - $ref: >-
          http://api.swindle.net/archetypes/v1/schemas/logging-event/error-response/403.schema.json
      - description: >-
          403 Forbidden. The server understood the request, but is refusing to
          fulfill it. Authorization will not help and the request SHOULD NOT be
          repeated. If the request method was not HEAD and the server wishes to
          make public why the request has not been fulfilled, it SHOULD describe
          the reason for the refusal in the entity. If the server does not wish
          to make this information available to the client, the status code 404
          (Not Found) can be used instead.
  NotFoundError:
    allOf:
      - $ref: >-
          http://api.swindle.net/archetypes/v1/schemas/logging-event/error-response/404.schema.json
      - description: >-
          404 Not Found. The server has not found anything matching the
          Request-URI. No indication is given of whether the condition is
          temporary or permanent. The 410 (Gone) status code SHOULD be used if
          the server knows, through some internally configurable mechanism, that
          an old resource is permanently unavailable and has no forwarding
          address. This status code is commonly used when the server does not
          wish to reveal exactly why the request has been refused, or when no
          other response is applicable.
  MethodNotAllowedError:
    allOf:
      - $ref: >-
          http://api.swindle.net/archetypes/v1/schemas/logging-event/error-response/405.schema.json
      - description: >-
          405 Method Not Allowed. The method specified in the Request-Line is
          not allowed for the resource identified by the Request-URI. The
          response MUST include an Allow header containing a list of valid
          methods for the requested resource.
